{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Foam API"
  },
  "host": "index.v0-7-5.svc.cluster.local",
  "paths": {
    "/index": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IndexString"
            },
            "description": ""
          }
        },
        "security": [
          {
            "JwtSecurity": []
          }
        ]
      }
    },
    "/beacon": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "format": "double",
            "in": "query",
            "name": "xmin",
            "type": "number"
          },
          {
            "format": "double",
            "in": "query",
            "name": "ymin",
            "type": "number"
          },
          {
            "format": "double",
            "in": "query",
            "name": "xmax",
            "type": "number"
          },
          {
            "format": "double",
            "in": "query",
            "name": "ymax",
            "type": "number"
          },
          {
            "format": "double",
            "in": "query",
            "name": "zoom",
            "type": "number"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid `zoom` or `ymax` or `xmax` or `ymin` or `xmin`"
          },
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/Beacon"
              },
              "type": "array"
            },
            "description": ""
          }
        },
        "security": [
          {
            "JwtSecurity": []
          }
        ]
      }
    },
    "/beacon/{address}": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "address",
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "`address` not found"
          },
          "200": {
            "schema": {
              "$ref": "#/definitions/Beacon"
            },
            "description": ""
          }
        },
        "security": [
          {
            "JwtSecurity": []
          }
        ]
      }
    },
    "/beacon/{address}/token_transfers": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "address",
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "`address` not found"
          },
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/TokenTransferWithCurrentValue"
              },
              "type": "array"
            },
            "description": ""
          }
        },
        "security": [
          {
            "JwtSecurity": []
          }
        ]
      }
    },
    "/beacon/{address}/shareholders": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "required": true,
            "in": "path",
            "name": "address",
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "`address` not found"
          },
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/ShareHolder"
              },
              "type": "array"
            },
            "description": ""
          }
        },
        "security": [
          {
            "JwtSecurity": []
          }
        ]
      }
    },
    "/tokens": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HexString"
            },
            "description": ""
          }
        },
        "security": [
          {
            "JwtSecurity": []
          }
        ]
      }
    },
    "/token_transfers": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "responses": {
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/TokenTransferWithCurrentValue"
              },
              "type": "array"
            },
            "description": ""
          }
        },
        "security": [
          {
            "JwtSecurity": []
          }
        ]
      }
    },
    "/search": {
      "get": {
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "maximum": 9223372036854776000,
            "minimum": -9223372036854776000,
            "in": "query",
            "name": "offset",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid `q` or `offset`"
          },
          "200": {
            "schema": {
              "items": {
                "$ref": "#/definitions/SearchHit"
              },
              "type": "array"
            },
            "description": ""
          }
        },
        "security": [
          {
            "JwtSecurity": []
          }
        ]
      }
    },
    "/authenticate": {
      "post": {
        "consumes": [
          "application/json;charset=utf-8"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "required": true,
            "schema": {
              "$ref": "#/definitions/Authentication"
            },
            "in": "body",
            "name": "body"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid `body`"
          },
          "200": {
            "schema": {
              "type": "string"
            },
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "IndexString": {
      "example": "<html><head>...</head></html>",
      "type": "string"
    },
    "Beacon": {
      "required": [
        "transactionHash",
        "beaconAddress",
        "factoryAddress",
        "name",
        "geohash"
      ],
      "properties": {
        "transactionHash": {
          "type": "string"
        },
        "beaconAddress": {
          "$ref": "#/definitions/EthAddress"
        },
        "factoryAddress": {
          "$ref": "#/definitions/EthAddress"
        },
        "name": {
          "type": "string"
        },
        "geohash": {
          "$ref": "#/definitions/GeoHash"
        }
      },
      "type": "object"
    },
    "EthAddress": {
      "example": "0x278d55cb3682cfab8cf46c0a6cdba19f3ed43063",
      "format": "base16",
      "type": "string"
    },
    "GeoHash": {
      "example": "lpb2b3kosmdi53dg",
      "format": "base32",
      "type": "string"
    },
    "TokenTransferWithCurrentValue": {
      "required": [
        "ttAddr",
        "ttFromAddr",
        "ttBlockNumber",
        "ttDepositedValue",
        "currentValue"
      ],
      "properties": {
        "ttAddr": {
          "$ref": "#/definitions/EthAddress"
        },
        "ttFromAddr": {
          "$ref": "#/definitions/EthAddress"
        },
        "ttBlockNumber": {
          "$ref": "#/definitions/HexString"
        },
        "ttDepositedValue": {
          "$ref": "#/definitions/HexString"
        },
        "currentValue": {
          "$ref": "#/definitions/HexString"
        }
      },
      "type": "object"
    },
    "HexString": {
      "format": "hex",
      "type": "string"
    },
    "ShareHolder": {
      "required": [
        "shareholderAddress",
        "shareholderValue"
      ],
      "properties": {
        "shareholderAddress": {
          "$ref": "#/definitions/EthAddress"
        },
        "shareholderValue": {
          "$ref": "#/definitions/HexString"
        }
      },
      "type": "object"
    },
    "SearchHit": {
      "required": [
        "shDocId"
      ],
      "properties": {
        "shDocId": {
          "$ref": "#/definitions/DocId"
        },
        "shScore": {
          "format": "double",
          "type": "number"
        },
        "shSource": {
          "$ref": "#/definitions/FoamSearchResult"
        }
      },
      "type": "object"
    },
    "DocId": {
      "type": "string"
    },
    "FoamSearchResult": {
      "minItems": 2,
      "items": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/GeoHash"
        }
      ],
      "maxItems": 2,
      "type": "array"
    },
    "Authentication": {
      "required": [
        "authenticationAddress",
        "authenticationMessage",
        "authenticationSignature"
      ],
      "properties": {
        "authenticationAddress": {
          "$ref": "#/definitions/EthAddress"
        },
        "authenticationMessage": {
          "$ref": "#/definitions/HexString"
        },
        "authenticationSignature": {
          "$ref": "#/definitions/HexString"
        }
      },
      "type": "object"
    }
  },
  "securityDefinitions": {
    "JwtSecurity": {
      "in": "header",
      "name": "Authorization",
      "type": "apiKey",
      "description": "JSON Web Token-based API key"
    }
  }
}
